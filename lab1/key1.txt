Exercise 1.1:
1.
e m a c s SP e x e r 1 . h t m l Enter

2.
C-s H T M L Enter

3.
C-s s c a v e n g e r Enter M-b

4.
C-s s e l f - r e f e r e n t i a l Enter M-b

5.
C-s a r r o w Enter M-b

6.
C-e

7.
C-a

8.
All navigation was done without arrow keys

9.
All navigation was done without arrow keys

10.
C-x C-c


Exercise 1.2:
1.
e m a c s SP e x e r 2 . h t m l

2.
C-u 17 C-n C-k

3.
C-s D E L E T E Enter C-a C-k

4. 
C-s < ! - - Enter C-a C-u 3 C-k

5.
C-s - - > Enter C-u 7 Backspace
C-s < ! - - Enter C-a C-u 4 C-k
C-s < ! - - Enter C-a C-k


Exercise 1.3:
1.
e m a c s SP e x e r 3 . h t m l Enter

2.
M-% A s s i g n m e n t SP 1 Enter A s s i g n m e n t SP 4 2 Enter y y Enter

3.
M-< M-% U T F - 8 Enter U S - A S C I I Enter y Enter

4.
M-x q u e r y - r e p l a c e - r e g e x p Enter [ ^ [ : a s c i i : ] ] Enter Enter ! Enter

5.
M-< C-s < / o l > Enter C-a Enter


Exercise 1.4
1.
Executed cat exer2.html exer2.diff >exer4.html

2.
e m a c s SP e x e r 4 . h t m l Enter

3.
M-> C-r < ! - - Enter C-SP C-SP C-e M-w C-r < / h t m l Enter C-e Enter C-y
M-> C-r < ! - - Enter C-SP C-SP C-n C-n C-n C-e M-w C-r s h o u l d o u t p u t C-r Enter C-e Enter C-y
M-> C-r < ! - - - - > Enter C-SP C-SP C-u 7 C-f M-w C-r n o t h i n g C-r C-s Enter C-y
M-> C-r < ! - - Enter C-SP C-Sp C-n C-n C-e M-w C-r < h 2 > S u b C-r Enter C-n Enter C-y
C-s < ! - - SP d i f f Enter C-a C-f C-k C-y C-r L a b o r a t o r y C-r Enter C-n C-n C-y
M-> C-r DELETE C-a C-f C-k C-y C-r H o m e w o r k C-r Enter C-n c-n C-y

4. 
Done above

5.
M-> C-r - - - SP e x e r 1 Enter C-SP C-SP M-> C-w

6.
C-y

7.
M-> C-r - - - SP e x e r 1 Enter C-a < ! - - Enter M-> Enter - - >

8.
M-% < o l > Enter < o L > Enter !
There were 7 instances found.

9.
Done.


Exercise 1.5:
1.
$ mkdir junk

2.
$ touch hello.c
$ emacs hello.c
Pasted code from assignment website directly into hello.c

3.
M-x c o m p i l e Enter h e l l o . c Enter
C-x C-f h e l l o - o u t C-u M-! . / h e l l o

4/5.
#include <stdio.h>
int
main (void)
{
  char n = '\n', b = '\\', q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn', b = '%c%c', q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);
  return 0;
}


Exercise 1.6:
1.
C-x b * s c r a t c h * Enter

2.
( r a n d o m SP " 1 0 4 - 4 4 1 - 7 2 5 " ) C-j
Result: 961092929015893134

3.
( s e t q SP x SP ( r a n d o m ) ) C-j
Result: 1864986441413086323
( s e t q SP y SP ( r a n d o m ) ) C-j
Result: 1173291918191836600

4.
( * SP x SP y ) C-j
Result: -1485562787031328344

5.
M-: (* SP x SP y ) Enter
Result: -1485562787031328344 (#o255421610203335254650, #x2b6238841b7559a8)
The output gives additional outputs along with the evaluated same evaluated value

6.
They are not random because they are generated by a computer algorithm of some sort. Because of this, they are not truly 100% unpredictable, especially as seen by the usage of a seed for the random function,

7,
I'm bad at probability ):

